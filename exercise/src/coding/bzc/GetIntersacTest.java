package coding.bzc;

import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

/**
 * @ClassNAME GetIntersacTest
 * @Description TODO
 * @Author yu
 */
public class GetIntersacTest {
    public static void main(String[] args) {
        GetIntersacTest g = new GetIntersacTest();
//        g.oneByOne();
        g.oneByOneTwo();
    }

    void oneByOne() {
        Integer[] nums1 = {2860, 282460, 282510, 282511, 282558, 282753, 282749, 282755, 282936, 282938, 283230, 283004, 283573, 283907, 284341, 285837, 285839, 286082, 285942, 286408, 286408, 286408, 286422, 287265, 286453, 287283, 287544, 337555, 338024, 338709, 338823, 338900, 338901, 338904, 338905, 338922, 338961, 2222239, 2222240, 2222249, 2222258, 2222261};
        Integer[] nums2 = {282556};
        Integer[] nums3 = {282900, 282900, 282718, 282718, 283319, 283492, 283599, 283600, 283738, 284047, 284322, 284849, 284632, 284853, 284322, 284632, 285369, 285507, 285506, 285760, 285843, 286122, 286609, 286621, 287540};
        Integer[] nums4 = {282754, 282738, 282768, 282854, 282481, 2859, 2831, 2860, 282772, 282441, 282520, 282759, 283023, 283110, 283292, 282996, 283075, 283239, 283336, 283337, 283342, 283343, 283320, 283404, 283352, 283355, 283555, 283508, 283520, 283542, 283437, 283605, 283665, 283543, 283666, 283667, 283671, 283673, 283454, 283454, 283763, 283766, 283775, 283774, 282528, 282536, 283798, 283799, 283735, 283417, 283859, 283863, 283864, 283864, 283872, 283898, 283827, 283827, 283959, 284000, 284001, 284003, 282442, 282549, 282554, 282554, 282555, 282992, 283049, 282953, 283057, 283065, 283089, 284502, 283435, 284614, 284642, 284709, 284708, 284749, 285077, 285500, 285484, 283694, 285582, 285789, 285898, 286151, 287003, 287028, 287529, 287590, 337555, 283120, 283238, 283244, 338454, 337975, 338569, 337658, 338415, 338713, 338792};
        Integer[] nums5 = {282791, 282802, 282803, 282806, 282832, 282836, 282836, 282900, 282902, 287104, 287104, 287104, 287416, 287416};
        Integer[] nums6 = {282797, 282521, 282913, 282976, 283062, 283067, 283064, 283358, 283365, 283693, 283685, 283082, 284637, 284758, 284825, 284780, 284848, 284829, 285723, 285547, 285524, 285564, 286380};
        Integer[] nums7 = {283707};
        Integer[] nums8 = {282646, 282695, 282650, 282778, 282773, 282783, 282784, 282785, 282786, 282787, 282788, 282789, 282745, 282744, 282807, 282810, 282809, 282817, 282816, 282845, 282849, 282856, 282857, 282858, 282872, 282871, 282870, 282880, 282882, 282939, 282899, 282896, 282892, 282964, 282855, 282861, 282959, 282940, 282940, 282914, 282969, 282975, 282882, 282987, 282972, 282991, 282973, 282994, 283013, 283014, 283020, 283021, 283046, 283048, 283048, 283043, 283039, 283053, 283069, 283068, 283070, 283071, 283076, 283134, 283135, 282922, 283161, 283169, 282934, 283180, 283179, 283176, 283177, 283170, 283172, 283197, 283215, 283241, 283236, 283257, 283256, 283288, 283288, 283305, 283310, 283318, 283324, 283321, 283338, 283338, 283333, 283333, 283367, 283375, 283376, 283362, 283341, 283379, 283381, 283380, 283201, 283422, 283491, 283491, 283535, 283540, 283540, 283547, 283554, 283566, 283596, 283617, 283650, 283652, 283656, 283658, 283659, 283660, 283661, 283673, 283743, 283832, 283927, 283761, 283937, 283783, 283960, 283705, 283895, 283895, 283895, 283705, 283705, 283831, 284005, 284005, 284005, 282905, 284027, 283994, 284011, 284011, 284011, 284011, 284057, 284059, 284169, 284063, 284189, 284237, 284240, 284269, 284262, 284310, 284326, 284343, 284359, 284361, 284362, 284378, 284352, 284383, 284383, 284354, 284329, 284382, 284354, 284352, 284345, 284382, 284427, 284215, 284464, 284527, 284623, 284625, 284622, 284626, 284616, 284638, 284639, 284640, 284643, 284644, 284645, 284646, 284651, 284654, 284657, 284659, 284661, 284662, 284664, 284665, 284663, 284666, 284667, 284668, 284673, 284674, 284675, 284676, 284678, 284679, 284680, 284681, 284682, 284684, 284637, 284695, 284702, 284636, 284636, 284715, 284736, 284741, 284756, 284778, 284777, 284851, 284852, 284852, 284853, 284855, 284855, 284871, 284896, 284910, 284916, 284932, 284941, 284942, 284940, 284945, 284950, 284901, 284956, 284968, 284980, 284984, 284986, 284989, 285001, 285005, 285006, 285008, 285010, 285013, 285014, 285015, 285017, 285024, 285027, 285028, 285029, 285030, 285031, 285032, 285038, 285039, 285043, 285044, 285045, 285046, 285053, 285055, 285057, 285059, 285060, 285066, 285081, 285082, 285083, 285087, 285088, 285089, 285094, 285090, 285099, 285101, 285102, 285104, 285107, 285108, 285109, 285110, 285111, 285112, 285136, 285137, 285138, 285139, 285142, 285144, 285146, 285147, 285148, 285149, 285150, 285151, 285152, 285153, 285159, 285160, 285164, 285167, 285168, 285170, 285171, 285173, 285183, 285189, 285190, 285191, 285192, 285193, 285195, 285206, 285207, 285208, 285209, 285210, 285211, 285212, 285213, 285229, 285230, 285231, 285232, 285233, 285234, 285238, 285239, 285240, 285243, 285245, 285246, 285248, 285253, 285256, 285257, 285264, 285181, 285273, 285279, 285280, 285284, 285285, 285267, 285293, 285306, 285319, 285321, 285326, 285332, 285335, 285336, 285339, 285340, 285344, 285366, 285376, 285383, 285393, 285394, 285395, 285396, 285397, 285400, 285401, 285402, 285403, 285405, 285406, 285410, 285411, 285414, 285418, 285436, 285437, 285456, 285457, 285459, 285460, 285531, 285531, 285536, 285589, 285316, 284967, 285709, 285816, 285884, 285791, 285703, 285791, 285807, 286549, 337771};
        Integer[] nums9 = {282805, 282811, 282819, 282820, 282823, 282824, 282823, 282835, 282835, 282835, 282835, 282837, 282837, 282837, 282837, 282837, 282840, 282840, 282848, 282929, 282933, 282942, 282954};
        Integer[] nums10 = {282841, 282843, 282846, 282859, 282864, 282866, 282867, 282868, 282869, 282878, 282879, 282883, 282884, 282885, 282886, 282889, 282890, 282898, 282904, 282907, 282923, 282925, 282943, 282952, 282971, 282977, 282957, 282981, 282983, 282982, 282988, 282995, 282997, 282956, 282907, 283045, 283080, 283093, 283111, 283116, 283120, 283136, 283137, 283153, 283151, 283148, 283152, 283149, 283150, 283217, 283221, 283222, 283224, 283223, 283218, 283260, 283259, 283258, 283267, 283326, 283312, 283328, 283329, 283351, 283356, 283356, 283356, 283333, 283363, 283364, 283330, 283370, 283384, 283386, 283387, 283388, 283389, 283390, 283391, 283392, 283393, 283394, 283395, 283396, 283397, 283399, 283400, 283401, 283402, 283409, 283412, 283413, 283418, 283419, 283425, 283425, 283425, 283425, 283482, 283499, 283509, 283496, 283548, 283556, 283564, 283564, 283564, 283569, 283589, 283616, 283619, 283630, 283635, 283721, 283721, 283723, 283731, 283731, 283754, 283757, 283788, 283641, 283760, 283784, 284048, 284053, 284079, 284083, 284104, 284079, 283681, 283675, 284154, 283674, 284308, 283683, 284279, 283978, 284357, 284251, 284357, 284250, 284405, 284404, 284629, 284591, 284592, 284759, 284876, 284874, 284875, 285497, 285498, 285583, 285576, 285568, 284494, 285714, 285720, 285692, 285704, 285691, 285520, 285732, 286512, 287468};
        Integer[] nums11 = {283175, 283175};
        Integer[] nums12 = {283140, 283140, 283158, 283160, 283162};
        Integer[] nums13 = {283143, 283146, 282537, 283155, 283165, 283171};
        Integer[] nums14 = {283734, 283745, 283726, 283732, 283971, 283822, 283795, 283824, 283825, 283826, 283930, 283871, 283996, 284078, 284080, 284085, 284087, 284094, 284103, 284107, 284115, 284091, 284116, 284117, 284120, 284121, 284125, 284137, 284138, 284142, 284146, 284145, 284151, 284152, 284153, 284162, 284163, 284171, 284170, 284183, 284185, 284188, 284190, 284192, 284196, 284212, 284216, 284218, 284221, 284223, 284225, 284228, 284229, 284234, 284235, 284245, 284252, 284254, 284260, 284272, 284285, 284292, 284299, 284316, 284340, 284353, 284356, 284360, 284259, 284381, 284392, 284412, 284414, 284422, 284433, 284445, 284474, 284475, 284459, 284483, 284484, 284487, 284496, 284497, 284490, 284504, 284506, 284532, 284568, 284579, 284583, 284586, 284586, 284587, 284587, 284178, 284529, 284628, 284717, 284529, 284846, 284850, 284952, 284877, 285058, 285289, 285308, 285315, 285330, 285324, 285324, 285356, 285357, 285358, 285362, 285362, 285363, 285367, 285409, 285454, 285461, 285464, 285465, 285466, 285483, 285609, 285615, 285616, 285330, 285629, 285795, 285796, 285802, 285825, 285917, 285917, 285918, 285920, 285921, 285923, 285924, 285933, 285910, 285976, 285916, 286015, 286016, 286018, 286019, 286024, 286033, 286032, 286061, 286078, 286165, 286187, 286245, 286252, 286262, 286364, 286735, 286800, 286800, 287084, 287084, 287084, 287084, 287089, 287085, 287085, 287078, 287078, 287086, 287086, 287119, 287119, 287119, 287119, 287119, 287124, 287125, 287120, 287114, 287173, 287173, 287176, 287176, 287198, 287209, 287206, 287215, 287209, 287209, 287365, 287368, 287368, 287412, 287412, 287556, 287556, 287556, 287556, 287567, 337546, 337546, 337546, 337546, 337546, 337546, 337551, 337553, 337553, 337553, 337553, 337553, 337751, 337750, 337755, 337754, 337754, 337754, 337754, 337754, 337756, 337775, 337779, 337779, 337778, 337778, 337790, 337791, 337805, 337804, 337829, 337941, 337941, 337941, 337941, 337941, 337941, 337941, 337986, 337985, 337984, 337992, 337993, 338006, 337993, 338006, 338010, 338010, 338027, 338027, 338028, 338035, 338034, 338034, 338056, 338062, 338062, 338034, 338062, 338032, 338056, 338039, 338039, 338056, 338092, 338092, 338117, 338117, 338119, 338130, 338132, 338317, 338318, 338344, 338364, 338398, 337986, 338398, 338325, 338430, 338443, 338441, 338440, 338451, 338452, 338451, 338452, 338452, 338451, 338472, 338473, 338473, 338471, 338474, 338479, 338480, 338487, 338488, 338507, 338507, 338528, 338527, 338543, 338542, 338549, 338553, 338553, 338552, 338573, 338573, 338598, 338573, 287411, 338473, 338640, 338640, 338655, 338655, 338654, 338670, 338672, 338668, 338721, 338870, 338895, 338898, 338951};


        List<Integer> list1 = Arrays.stream(nums1).distinct().collect(Collectors.toList());
        List<Integer> list2 = Arrays.stream(nums2).distinct().collect(Collectors.toList());
        List<Integer> list3 = Arrays.stream(nums3).distinct().collect(Collectors.toList());
        List<Integer> list4 = Arrays.stream(nums4).distinct().collect(Collectors.toList());
        List<Integer> list5 = Arrays.stream(nums5).distinct().collect(Collectors.toList());
        List<Integer> list6 = Arrays.stream(nums6).distinct().collect(Collectors.toList());
        List<Integer> list7 = Arrays.stream(nums7).distinct().collect(Collectors.toList());
        List<Integer> list8 = Arrays.stream(nums8).distinct().collect(Collectors.toList());
        List<Integer> list9 = Arrays.stream(nums9).distinct().collect(Collectors.toList());
        List<Integer> list10 = Arrays.stream(nums10).distinct().collect(Collectors.toList());
        List<Integer> list11 = Arrays.stream(nums11).distinct().collect(Collectors.toList());
        List<Integer> list12 = Arrays.stream(nums12).distinct().collect(Collectors.toList());
        List<Integer> list13 = Arrays.stream(nums13).distinct().collect(Collectors.toList());
        List<Integer> list14 = Arrays.stream(nums14).distinct().collect(Collectors.toList());

        Set<Integer> totalOrderIds = new HashSet<>();
        int count = 0;
        for (Integer num : list1){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list2){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list3){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list4){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list5){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list6){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list7){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list8){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list9){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list10){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list11){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list12){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list13){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list14){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }

        System.out.println();
        System.out.println(count);
    }
    void lessAndMore(){
        int count = 0;
        Integer[] less = {338067,338429,338455,338455,338505,338050,338788,338836,338790,338830,338829,338828,338903,338902,337659,338504,338548,338072,338618,338698,338705,338710,338924,338928,338783,338832,338859,338825,338889,338906,338908,338913,338916,338938,338964,338965,338968,1111112,2222223,2222230,2222238,2222237,2222248,2222265,338637,338642,338647,338685,338716,338718,338735,338762,338767,338809,338848,338849,338860,338871,338873,338884,338878,338887,338890,338896,338897,338909,338911,338915,338918,338926,338931,338966,338969,338971,2222235,2222254,338450,338450,338720,338720,338720,338720,338699,2222260,338914,338920,338962};
        Set<Integer> lessSet = new HashSet<>();


        Integer[] more = {338067,338429,338455,338455,338505,338050,338788,338836,338790,338830,338829,338828,338903,338902,337659,338504,338548,338072,338618,338698,338705,338710,338924,338928,338783,338832,338859,338825,338889,338906,338908,338913,338916,338938,338964,338965,338968,1111112,2222223,2222230,2222238,2222237,2222248,2222265,338637,338642,338647,338685,338716,338718,338735,338762,338767,338809,338848,338849,338860,338871,338873,338884,338878,338887,338890,338896,338897,338909,338911,338915,338918,338926,338931,338966,338969,338971,2222235,2222254,338450,338450,338720,338720,338720,338720,338699,2222260,338914,338920,33896};
        Set<Integer> moreSet = new HashSet<>();

        for (Integer num : less){
            lessSet.add(num);
        }

        for (Integer num : more){
            moreSet.add(num);
        }

        System.out.println();
        System.out.println(count);
        System.out.println(moreSet.size());
        System.out.println(lessSet.size());
    }

    void oneByOneTwo(){
        Integer[] totalOrderids = {338067,338429,338455,338455,338505,338050,338788,338836,338790,338830,338829,338828,338903,338902,337659,338504,338548,338072,338618,338698,338705,338710,338924,338928,338783,338832,338859,338825,338889,338906,338908,338913,338916,338938,338964,338965,338968,1111112,2222223,2222230,2222238,2222237,2222248,2222265,338637,338642,338647,338685,338716,338718,338735,338762,338767,338809,338848,338849,338860,338871,338873,338884,338878,338887,338890,338896,338897,338909,338911,338915,338918,338926,338931,338966,338969,338971,2222235,2222254,338450,338450,338720,338720,338720,338720,338699,2222260,338914,338920,338962};

        Integer[] nums1 = {338067,338429,338455,338455,338505,338050,338788,338836,338790,338830,338829,338828,338903,338902};
        Integer[] nums2 = {337659,338504,338548};
        Integer[] nums3 = {338072,338618,338698,338705,338710,338924,338928};
        Integer[] nums4 = {};
        Integer[] nums5 = {338783,338832,338859,338825,338889,338906,338908,338913,338916,338938,338964,338965,338968,1111112,2222223,2222230,2222238,2222237,2222248,2222265};
        Integer[] nums6 = {338637,338642,338647,338685,338716,338718,338735,338762,338767,338809,338848,338849,338860,338871,338873,338884,338878,338887,338890,338896,338897,338909,338911,338915,338918,338926,338931,338966,338969,338971,2222235,2222254};
        Integer[] nums7 = {338450,338450,338720,338720,338720,338720};
        Integer[] nums8 = {338699};
        Integer[] nums9 = {2222260};
        Integer[] nums10 = {338914,338920,338962};

        List<Integer> list1 = Arrays.stream(nums1).distinct().collect(Collectors.toList());
        List<Integer> list2 = Arrays.stream(nums2).distinct().collect(Collectors.toList());
        List<Integer> list3 = Arrays.stream(nums3).distinct().collect(Collectors.toList());
        List<Integer> list4 = Arrays.stream(nums4).distinct().collect(Collectors.toList());
        List<Integer> list5 = Arrays.stream(nums5).distinct().collect(Collectors.toList());
        List<Integer> list6 = Arrays.stream(nums6).distinct().collect(Collectors.toList());
        List<Integer> list7 = Arrays.stream(nums7).distinct().collect(Collectors.toList());
        List<Integer> list8 = Arrays.stream(nums8).distinct().collect(Collectors.toList());
        List<Integer> list9 = Arrays.stream(nums9).distinct().collect(Collectors.toList());
        List<Integer> list10 = Arrays.stream(nums10).distinct().collect(Collectors.toList());

        Set<Integer> totalOrderIds = new HashSet<>();
        int count = 0;
        for (Integer num : list1){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list2){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list3){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list4){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list5){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list6){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list7){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list8){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list9){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }
        for (Integer num : list10){
            if (totalOrderIds.contains(num)){
                System.out.printf(num + ",");
                count++;
            }
            totalOrderIds.add(num);
        }


        System.out.println();
        System.out.println(count);
        System.out.println(list1.size() + list2.size() + list3.size() + list4.size()+ list5.size()
                + list6.size()+ list7.size()+ list8.size()+ list9.size()+ list10.size());
    }
}
